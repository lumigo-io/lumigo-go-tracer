version: 2.1
executors:
  default:
    docker:
    - image: circleci/golang:1.17

orbs:
  github-cli: &github_cli_version circleci/github-cli@1.0
  lumigo-orb: &lumigo_orb_version lumigo/lumigo-orb@volatile

aliases:
- &restore_cache
  restore_cache:
    key: go-mod-v1-{{ checksum "go.sum" }}
- &save_cache
  save_cache:
    key: go-mod-v1-{{ checksum "go.sum" }}
    paths:
      - "/go/pkg/mod"

workflows:
  ci-build:
    jobs:
    - lumigo-orb/print_orb_versions:
        github_cli_version: *github_cli_version
        lumigo_orb_version: *lumigo_orb_version
    - test:
        filters:
          branches:
            ignore: master
    - lumigo-orb/is_environment_available:
        filters:
          branches:
            ignore: master
    - lumigo-orb/be-deploy:
        requires:
          - lumigo-orb/is_environment_available
    - lumigo-orb/integration-test-prep:
        deploy_spec: default
        requires:
          - lumigo-orb/be-deploy
    - lumigo-orb/integration-test-limited-flows:
        deploy_spec: default
        tests_spec: testNormal
        requires:
          - lumigo-orb/integration-test-prep
    - lumigo-orb/integration-test-parallel:
        deploy_spec: default
        tests_spec: testNormal
        requires:
          - lumigo-orb/integration-test-limited-flows
    - lumigo-orb/workflow-completed-successfully:
        requires:
          - test
          - lumigo-orb/integration-test-parallel

  master-build:
    jobs:
    - test:
        filters:
          branches:
            only:
            - master
    - create-push-release:
        requires:
          - test

commands:
  checkout_utils:
    description: "Checkout various utilities"
    steps:
      - configure_ssh_for_github
      - run:
          name: Clone utils repository
          command: |
            cd ..
            git clone git@github.com:lumigo-io/utils.git

            # attempt to checkout the matching branch if it exists
            cd utils
            git checkout "$CIRCLE_BRANCH" || true

  configure_ssh_for_github:
    description: Configure SSH host checking for GitHub
    steps:
      - run:
          name: Configure SSH host checking for GitHub
          command: |
            mkdir -p ~/.ssh
            echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

jobs:
  test:
    executor:
      name: default
    steps:
    - checkout_utils
    - checkout
    - *restore_cache
    - run: go install golang.org/dl/go1.16@latest
    - run: go1.16 download
    - run: go install golang.org/dl/go1.18@latest
    - run: go1.18 download
    - run: export GO=go && make checks # runs test for go1.17
    - run: export GO=go1.16 && make checks
    - run: export GO=go1.18 && make checks
    - run: make upload-codecov
    - *save_cache

  create-push-release:
    executor:
      name: default
    steps:
    - github-cli/setup
    - checkout
    - run: |
        make release
